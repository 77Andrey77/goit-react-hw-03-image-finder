{"version":3,"sources":["components/ImageGallery/ImageGalleryItem/ImageGalleryItem.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.js","servises/apiService.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/Button/Button.js","components/App/App.js","reportWebVitals.js","index.js","components/Modal/Modal.module.css"],"names":["module","exports","Searchbar","state","searchName","handleNameChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","alert","className","this","type","name","onChange","placeholder","Component","apiService","fetchImagesWithQuery","nextName","page","fetch","then","response","ok","json","Promise","reject","Error","ImageGalleryItem","id","webformatURL","tags","largeImageURL","onOpenModal","s","onClick","src","alt","data-source","ImageGalleryItemImage","ImageGallery","images","map","image","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","Overlay","Button","App","loading","showModal","arePicturesOver","fetchImages","hits","catch","error","console","log","finally","handleFormSubmit","handleLoadeMore","dataset","source","toggleModal","prevProps","prevState","setTimeout","scrollTo","top","documentElement","scrollHeight","behavior","length","color","height","width","timeout","style","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.de79d260.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2WVds\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__1hQGn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3d69f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2tpmi\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../Searchbar/Searchbar.css';\r\n\r\nexport default class Searchbar extends Component {\r\n  // static propTypes = {\r\n  //   onSubmit: PropTypes.func.isRequired,\r\n  // };\r\n\r\n  state = {\r\n    searchName: '',\r\n  };\r\n\r\n  handleNameChange = event => {\r\n    this.setState({ searchName: event.currentTarget.value.toLowerCase() });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.searchName.trim() === '') {\r\n      alert('Введите название искомого объекта');\r\n      return;\r\n    }\r\n    this.props.onSubmit(this.state.searchName);\r\n    this.setState({ searchName: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            name=\"searchName\"\r\n            value={this.state.searchName}\r\n            onChange={this.handleNameChange}\r\n            type=\"text\"\r\n            // autocomplete=\"off\"\r\n            // autofocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","function fetchImagesWithQuery(nextName, page) {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${nextName}&page=${page}&key=19032313-4dd4b1c57c2e902bf9f549139&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error('Something is wrong, please try again'));\r\n  });\r\n}\r\nconst apiService = { fetchImagesWithQuery };\r\nexport default apiService;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from '../ImageGalleryItem/ImageGalleryItem.module.css';\r\n\r\nexport default class ImageGalleryItem extends Component {\r\n  render() {\r\n    const { id, webformatURL, tags, largeImageURL, onOpenModal } = this.props;\r\n\r\n    return (\r\n      <li className={s.ImageGalleryItem} key={id}>\r\n        <img\r\n          onClick={onOpenModal}\r\n          src={webformatURL}\r\n          alt={tags}\r\n          data-source={largeImageURL}\r\n          className={s.ImageGalleryItemImage}\r\n        />\r\n      </li>\r\n    );\r\n  }\r\n}\r\nImageGalleryItem.propTypes = {\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n  webformatURL: PropTypes.string.isRequired,\r\n  onOpenModal: PropTypes.func.isRequired,\r\n};\r\n","import { Component } from 'react';\r\nimport s from '../ImageGallery/ImageGallery.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\r\n// import apiService from '../../services/apiService';\r\n\r\nexport default class ImageGallery extends Component {\r\n  render() {\r\n    const { images, onOpenModal } = this.props;\r\n    return (\r\n      <>\r\n        <ul className={s.ImageGallery}>\r\n          {images.map(image => (\r\n            <ImageGalleryItem\r\n              key={image.id}\r\n              webformatURL={image.webformatURL}\r\n              tags={image.tags}\r\n              largeImageURL={image.largeImageURL}\r\n              onOpenModal={onOpenModal}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  onOpenModal: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from '../Modal/Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  // static propTypes = {\r\n  //   onClose: PropTypes.func.isRequired,\r\n  // };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { largeImageURL } = this.props;\r\n    return createPortal(\r\n      <div className={s.Overlay} onClick={this.handleBackdropClick}>\r\n        <div className={s.Modal}>\r\n          <img src={largeImageURL} alt=\"\" className={s.ImageGalleryItemImage} />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","import s from '../Button/Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Button({ onClick }) {\r\n  return (\r\n    <button onClick={onClick} className={s.Button}>\r\n      Loade more\r\n    </button>\r\n  );\r\n}\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Searchbar from '../Searchbar/Searchbar';\nimport apiService from '../../servises/apiService';\nimport ImageGallery from '../ImageGallery/ImageGallery';\nimport Modal from '../Modal/Modal';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\nimport Button from '../Button/Button';\n\nexport default class App extends Component {\n  state = {\n    searchName: '',\n    images: [],\n    page: 1,\n    loading: false,\n    showModal: false,\n    largeImageURL: '',\n    arePicturesOver: false,\n    // totalImg: '',\n  };\n\n  /////////////////////// проверяем изменение запроса\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevState.searchName;\n    const nextName = this.state.searchName;\n\n    if (prevName !== nextName) {\n      console.log('изменился запрос');\n      this.setState({ loading: true });\n\n      this.fetchImages();\n    }\n\n    if (prevState.page !== this.state.page) {\n      setTimeout(() => {\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      }, 1000);\n    }\n  }\n\n  ///////////////////////////////////Api\n\n  fetchImages = () => {\n    this.setState({ loading: true });\n    apiService\n      .fetchImagesWithQuery(this.state.searchName, this.state.page)\n      .then(response =>\n        this.setState(({ images, page }) => ({\n          images: [...images, ...response.hits],\n          page: page + 1,\n        })),\n      )\n      .catch(error => console.log(error))\n      .finally(() => this.setState({ loading: false }));\n  };\n  //////////////////////////////////////////\n  // let overPictures =totalHits-(page*12)  ;\n\n  ///////////////////////////////////////////////\n  // toggleLoader = () => {\n  //   this.setState(({ loading }) => ({ loading: !loading }));\n  // };\n\n  /////////////////////////записывает из формы значение иcкомого в state\n  handleFormSubmit = searchName => {\n    this.setState({ searchName: searchName, page: 1, images: [] });\n  };\n  ////////////////////////// loade more\n  handleLoadeMore = () => {\n    this.fetchImages();\n  };\n\n  ////////////////////////////////запись значения largeImageURL и открытие модалки\n  onOpenModal = e => {\n    this.setState({ largeImageURL: e.target.dataset.source });\n    this.toggleModal();\n  };\n\n  ///////////////////////////////change modal\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  /////////////////////////////////////////////\n\n  render() {\n    const { images, showModal, largeImageURL, loading } = this.state;\n    return (\n      <div>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n\n        {images.length > 0 && (\n          <ImageGallery\n            images={images}\n            handleLoadeMore={this.handleLoadeMore}\n            onOpenModal={this.onOpenModal}\n          />\n        )}\n        {loading && (\n          <Loader\n            type=\"Puff\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={3000}\n            style={{ textAlign: 'center' }}\n          />\n        )}\n        {!loading && images.length > 11 && (\n          <Button onClick={this.handleLoadeMore} />\n        )}\n\n        {showModal && (\n          <Modal onClose={this.toggleModal} largeImageURL={largeImageURL} />\n        )}\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__26ZPx\",\"Modal\":\"Modal_Modal__1jw-k\",\"ImageGalleryItemImage\":\"Modal_ImageGalleryItemImage__1d-gL\"};"],"sourceRoot":""}